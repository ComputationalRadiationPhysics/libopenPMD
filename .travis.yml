language: python

branches:
  only:
  - wheels

env:
  global:
    - OPENPMD_GIT_REF="0.13.4"

    - CIBW_PROJECT_REQUIRES_PYTHON=">=3.6"
    # Install dependencies on Linux and OSX
    - CIBW_BEFORE_BUILD="bash -x .github/library_builders.sh"
    # for the openPMD-api build, CMake shall search for
    # static dependencies of HDF5 and ADIOS1 (see setup.py)
    - CIBW_ENVIRONMENT="HDF5_USE_STATIC_LIBRARIES='ON' ADIOS_USE_STATIC_LIBS='ON'"
    # Show a bit more output (pip -v)
    - CIBW_BUILD_VERBOSITY="1"

jobs:
  include:
    # perform a linux ARMv8 build
    # note: takes >50min, so we need to split
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="*_aarch64"
        - CIBW_SKIP="cp38-* cp39-*"
    - services: docker
      arch: arm64
      dist: focal
      env:
        - CIBW_BUILD="*_aarch64"
        - CIBW_SKIP="cp36-* cp37-*"

    # perform a linux PPC64LE build
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="*_ppc64le"
        - CIBW_SKIP="cp38-* cp39-*"
    - services: docker
      arch: ppc64le
      dist: focal
      env:
        - CIBW_BUILD="*_ppc64le"
        - CIBW_SKIP="cp36-* cp37-*"

    # perform a linux S390X build
    # blocked by https://github.com/GTkorvo/dill/issues/15
    #- services: docker
    #  arch: s390x
    #  dist: focal
    #  env:
    #    - CIBW_BUILD="*_s390x"

    # and a build for old macOS versions (10.13 with xcode9.4.1 ~2017)
    # - os: osx
    #   osx_image: xcode9.4
    #   language: shell
    #   python: 3.6

install:
  - git clone --branch ${OPENPMD_GIT_REF} --depth 1 https://github.com/openPMD/openPMD-api.git src
  - cp library_builders.sh src/.github/
  - python3 -m pip install cibuildwheel==2.0.0a2
  # twine & cryptography: see
  #   https://github.com/scikit-build/cmake-python-distributions/blob/4730aeee240917303f293dffc89a8d8d5a4787c4/requirements-deploy.txt
  #   https://github.com/pyca/cryptography/issues/6086
  - python3 -m pip install twine cryptography~=3.3.2

script:
  - cd src
  - python3 -m cibuildwheel --output-dir ../wheelhouse
  - cd ..

deploy:
  - provider: script
    script: python3 -m twine upload --skip-existing wheelhouse/*
    skip_cleanup: true
    on:
      repo: ${TRAVIS_REPO_SLUG}
      branch: wheels
