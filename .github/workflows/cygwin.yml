name: Cygwin

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  cmake:
    runs-on: [windows-2019]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - name: Install cygwin
        run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
      - name: Set Environment
        shell: cmd
        run: |
          echo CC=/usr/bin/cc >> %GITHUB_ENV%
          echo CXX=/usr/bin/c++.exe >> %GITHUB_ENV%
          echo C:\\tools\\cygwin\\bin >> %GITHUB_PATH%
          echo C:\\tools\\cygwin\\usr\\bin >> %GITHUB_PATH%
      - name: Install dependencies
        shell: cmd
        run: |
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO -R C:/tools/cygwin -s http://mirrors.kernel.org/sourceware/cygwin/ -P cmake,gcc-core,gcc-g++,git,libhdf5-devel,make,python37-devel,python37-numpy,zlib-devel
      - name: Build
        shell: cmd
        run: |
          mkdir build
          cd build
          cmake ../
          cmake --build . --parallel 2
      - name: Test
        shell: cmd
        run: |
          cd build
          ctest
#          cmake --build . --target install

  wheel:
    runs-on: [windows-2019]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v2
      - name: Install cygwin
        run: |
          choco config get cacheLocation
          choco install --no-progress cygwin
      - name: Set Environment
        shell: cmd
        run: |
          echo CC=/usr/bin/cc >> %GITHUB_ENV%
          echo CXX=/usr/bin/c++.exe >> %GITHUB_ENV%
          echo C:\\tools\\cygwin\\bin >> %GITHUB_PATH%
          echo C:\\tools\\cygwin\\usr\\bin >> %GITHUB_PATH%
      - name: Install dependencies
        shell: cmd
        run: |
          C:\tools\cygwin\cygwinsetup.exe -qgnNdO -R C:/tools/cygwin -s http://mirrors.kernel.org/sourceware/cygwin/ -P cmake,gcc-core,gcc-g++,git,libhdf5-devel,libuv-devel,make,python37-devel,python37-numpy,python37-pip,python37-wheel,zlib-devel
      - name: Build
        shell: cmd
        run: |
          python3.7m.exe -m pip install -U pip setuptools wheel
          python3.7m.exe -m pip install git+https://github.com/ax3l/scikit-build.git@topic-cygwinPlatform
          python3.7m.exe -m pip wheel --no-build-isolation --no-deps -v .
      - name: Install
        shell: cmd
        run: |
          python3.7m.exe -m pip install -v *whl
      - name: Test
        shell: cmd
        run: |
          python3.7m.exe -m openpmd_api.ls --help
