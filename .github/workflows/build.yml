name: wheels

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15, ubuntu-18.04, windows-2019]

    steps:
    - uses: actions/checkout@v2
      with:
        path: 'src'
        ref: '0.13.0'

    - uses: actions/checkout@v2
      with:
        path: 'src/.github/'

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install cibuildwheel==1.7.1

    - name: Download Patch 1/2
      uses: suisei-cn/actions-download-file@v1
      id: FindPythonModule
      with:
        url: "https://gist.githubusercontent.com/ax3l/ed1ac778aba49da3122e81496289a0c6/raw/e0fdf8536ab548875010bbccd7729d3b71d28f3f/FindPythonModule.patch"
        target: src/.patch/

    - name: Download Patch 2/2
      uses: suisei-cn/actions-download-file@v1
      id: setupversion
      with:
        url: "https://gist.githubusercontent.com/ax3l/ed1ac778aba49da3122e81496289a0c6/raw/27c7bc63fd8bc5ecc752bef740568fc5cb359784/setupversion.patch"
        target: src/.patch/

    - name: Apply Patch
      run: |
        python -m pip install "patch==1.*"
        cd src
        python -m patch .patch/FindPythonModule.patch
        python -m patch .patch/setupversion.patch

    - name: Build wheel
      env:
        # (1,2,3) Skip building for Python 2.7 & 3.5 on all platforms
        # (4) CMake/Pybind11 scripts not clever enough to build 32bit Windows with 64bit compiler
        # (5) GNU 7.3.1 & MPark.Variant 1.4.0 on i686:
        #     https://github.com/pypa/manylinux/issues/543
        #       variant.hpp:2241:9: internal compiler error:
        #       unexpected expression ‘I’ of kind template_parm_index
        #       typename T = lib::type_pack_element_t<I, Ts...>,
        # (6) Disable PyPy (manylinux image: yum repo issues)
        #     https://github.com/pypa/manylinux/issues/899
        CIBW_SKIP: cp27-* pp27-* cp35-* *-win32 *-manylinux_i686 pp*-manylinux*
        # Install dependencies
        CIBW_BEFORE_BUILD_LINUX: bash -x .github/library_builders.sh
        CIBW_BEFORE_BUILD_MACOS: bash -x .github/library_builders.sh
        CIBW_BEFORE_BUILD_WINDOWS: 'cmd /E:ON /V:ON /C .github\library_builders.bat'
        # for the openPMD-api build, CMake shall search for
        # static dependencies of HDF5 and ADIOS1 (see setup.py)
        CIBW_ENVIRONMENT: HDF5_USE_STATIC_LIBRARIES='ON' ADIOS_USE_STATIC_LIBS='ON'
        CIBW_ENVIRONMENT_WINDOWS: HDF5_USE_STATIC_LIBRARIES='ON' CMAKE_PREFIX_PATH='C:/Program Files (x86)/ADIOS2;C:/Program Files (x86)/blosc;C:/Program Files/HDF_Group/HDF5/1.12.0;C:/Program Files (x86)/ZFP;C:/Program Files (x86)/zlib/'
        # C++11 & 14 support in macOS 10.9+
        # C++17 support in macOS 10.13+/10.14+
        #   https://cibuildwheel.readthedocs.io/en/stable/cpp_standards/#macos-and-deployment-target-versions
        MACOSX_DEPLOYMENT_TARGET: 10.9
        # Show a bit more output (pip -v)
        CIBW_BUILD_VERBOSITY: 1
      run: |
        cd src
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --upgrade cmake
        python setup.py sdist --dist-dir ../wheelhouse
        python -m cibuildwheel --output-dir ../wheelhouse

    - name: Publish on pypi.org
      if: github.event_name == 'push' && github.repository == 'openPMD/openPMD-api' && github.ref == 'refs/heads/wheels'
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.pypa_gh_action_upload }}
      run: |
        python -m pip install -U twine
        python -m twine upload --skip-existing wheelhouse/*

    - uses: actions/upload-artifact@v1
      name: Publish as GitHub artifact
      with:
        name: wheels
        path: ./wheelhouse
